# -*- coding: utf-8 -*-
"""Untitled97.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YJPUuSrbH7dEYj1J-G5SJTh35364UQB0
"""

def knapsack(weights, values, capacity):
    n = len(weights)
    dp = [[0] * (capacity + 1) for _ in range(n + 1)]

    # Build the DP table
    for i in range(1, n + 1):
        for w in range(1, capacity + 1):
            if weights[i - 1] <= w:
                dp[i][w] = max(dp[i - 1][w], dp[i - 1][w - weights[i - 1]] + values[i - 1])
            else:
                dp[i][w] = dp[i - 1][w]

    return dp[n][capacity]


# Example usage
weights = [3, 1, 4]
values = [4, 5, 7]
capacity = 5
max_value = knapsack(weights, values, capacity)
print("Maximum value achievable:", max_value)